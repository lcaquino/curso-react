Instalação do nodejs
https://nodejs.org/pt-br/

Instalando o yarn
npm install -f yarn

Criando corpo da aplicação
Instalando o React CLI(create-react-app)
O create-react-app é uma ferramenta criada pelo próprio Facebook para auxiliar a construção de aplicações React, evitando todo um 
processo de configuração de ambiente e outras dores de cabeça conhecidas pelos desenvolvedores. 
npm install -g create-react-app

Instalando Git
https://git-scm.com/downloads

Iniciando projeto
Com o create-react-app já instalado, vamos criar nossa aplicação chamada my-app.
npx create-react-app nome-do-projeto

Git
git init

echo "# curso-react" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/lcaquino/curso-react.git
git push -u origin master

…or push an existing repository from the command line
git remote add origin https://github.com/lcaquino/curso-react.git
git push -u origin master

#Para chamar o JS dentro do html, deve colocar entre {}

#Stados
Usar a sintaxe state, pois é própria do react
state = {
	numero : "123"
}
  
Como chamar?
<h1>Teste {this.state.numero}</h1>



#Nós
Quando criar um componente tem que ser de nó único 

render() {
	return (      
		<h1>Teste {this.state.nome}</h1>
		<h2>Teste 456</h2>      
	)
}

não pode colocar mais de uma tag html, para isso tem duas possibilidades, uma usar o React.Fragment ou div

* React.Fragment
render() {
    return (
      <React.Fragment>
        <h1>Teste {this.state.nome}</h1>
        <h2>Teste 456</h2>
      </React.Fragment>
    )
  }
  
* Div
 render() {
    return (
      <div>
        <h1>Teste {this.state.nome}</h1>
        <h2>Teste 456</h2>
      </div>
    )
  }
  
* Rotas
Para criar rotas utilizar a biblioteca do react, instalar utilizando o npm
npm install react-router-dom -s

